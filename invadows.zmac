; This program is free software: you can redistribute it and/or modify
; it under the terms of the GNU General Public License as published by
; the Free Software Foundation, either version 3 of the License, or
; (at your option) any later version.
;
; This program is distributed in the hope that it will be useful, but
; WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
; or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
; for more details.
;
; You should have received a copy of the GNU General Public License along
; with this program. If not, see https://www.gnu.org/licenses/

; ############################
; ##                        ##
; ##  HARDWARE ENVIRONMENT  ##
; ##                        ##
; ############################

; This software works on the hardware board that was developed by Midway
; and used for games from Gun Fight (1975) to Space Invaders II (1980).
;
; 8080 processor, starting execution at address $0000.
; 8kB of ROM from $0000 to $1FFF
; 8kB of RAM from $2000 to $3FFF
;     including 7kB framebuffer starting at $2400, 256x224 1-bit.
;     Rotated 90 degrees CCW seen from viewer.
;     MSB to the "left" (bottom after rotation)
;
; I/O ports for Space Invaders (including cocktail version)
;
; Inputs
;
; port 1 input
;   0 - coin, debounced (returns 1 once per coin, resets after read)
;   1 - 2P start
;   2 - 1P start
;   4 - 1P fire
;   5 - 1P left
;   6 - 1P right
;
; port 2 input
;   0,1 - DIP switches (number of ships from 3 to 6)
;   2 - DIP switch (0=hard, 1=easy)
;   4 - 2P fire
;   5 - 2P left
;   6 - 2P right
;   7 - DIP switch (show/hide coin info)
;
; Sounds
;
; port 3 output
;   0 - saucer (doesn't automatically stop)
;   1 - shot
;   2 - player hit
;   3 - invader hit
;   4 - extended play
;
; port 4 output
;   0 - invader motion A
;   1 - invader motion B
;   2 - invader motion C
;   3 - invader motion D
;   4 - saucer hit
;   5 - amplifier on/off
;
; Shifter
;
; port 2 output: number of bits to shift
; port 4 output: data stream
; port 3 input: data stream from port 4 shifted by number of bits
;               specifed in port 2

        .8080
	.org	0

        DI
	LXI	SP,$2400

	MVI	C,112

	LXI	H,$2400
fill:

        MVI	A,$55
	MVI	B,32
l32a:
	MOV	M,A
        INX	H
	DCR	B
        JNZ	l32a

        MVI	A,$AA
	MVI	B,32
l32b:
	MOV	M,A
        INX	H
	DCR	B
        JNZ	l32b

	DCR	C
	JNZ	fill
loop:
	OUT	6
	JMP	loop
        
; 345678901234567890123456789012345678901234567890123456789012345678901234567890
